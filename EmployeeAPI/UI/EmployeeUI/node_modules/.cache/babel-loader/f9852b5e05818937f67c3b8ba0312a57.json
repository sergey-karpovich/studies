{"remainingRequest":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\babel-loader\\lib\\index.js!C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\src\\store\\modules\\employee\\actions.js","dependencies":[{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\src\\store\\modules\\employee\\actions.js","mtime":1665752668112},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\babel.config.js","mtime":1665752668081},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665846217214},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\babel-loader\\lib\\index.js","mtime":1665846227068},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\eslint-loader\\index.js","mtime":1665846219959}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIGFzeW5jIGxvYWRFbXBsb3llZXMoY29udGV4dCkgewogICAgY29uc3QgdXJsID0gY29udGV4dC5yb290R2V0dGVycy51cmw7IC8vIGlmKCFwYXlsb2FkLmZvcmNlUmVmcmVzaCAmJiAhY29udGV4dC5nZXR0ZXJzLnNob3VsZFVwZGF0ZSl7CiAgICAvLyAgICAgcmV0dXJuOwogICAgLy8gfQoKICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KHVybCArICcvZW1wbG95ZWUvJyk7CgogICAgaWYgKCFyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgewogICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihyZXNwb25zZS5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZmV0Y2ghJyk7CiAgICAgIHRocm93IGVycm9yOwogICAgfQoKICAgIGNvbnN0IGVtcGxveWVlcyA9IFtdOwoKICAgIGZvciAoY29uc3QgZW1wIGluIHJlc3BvbnNlLmRhdGEpIHsKICAgICAgY29uc3QgZW1wbG95ZWUgPSB7CiAgICAgICAgRW1wbG95ZWVJZDogcmVzcG9uc2UuZGF0YVtlbXBdLkVtcGxveWVlSWQsCiAgICAgICAgZmlyc3ROYW1lOiByZXNwb25zZS5kYXRhW2VtcF0uRmlyc3ROYW1lLAogICAgICAgIGxhc3ROYW1lOiByZXNwb25zZS5kYXRhW2VtcF0uTGFzdE5hbWUsCiAgICAgICAgZGVzY3JpcHRpb246IHJlc3BvbnNlLmRhdGFbZW1wXS5EZXNjcmlwdGlvbiwKICAgICAgICByYXRlOiByZXNwb25zZS5kYXRhW2VtcF0uUmF0ZSwKICAgICAgICBhcmVhczogcmVzcG9uc2UuZGF0YVtlbXBdLkFyZWFzLAogICAgICAgIGJpcnRoRGF0ZTogcmVzcG9uc2UuZGF0YVtlbXBdLkJpcnRoRGF0ZSwKICAgICAgICBoaXJlRGF0ZTogcmVzcG9uc2UuZGF0YVtlbXBdLkhpcmVEYXRlLAogICAgICAgIHBob25lTnVtYmVyOiByZXNwb25zZS5kYXRhW2VtcF0uSG9tZVBob25lLAogICAgICAgIHBob3RvUGF0aDogcmVzcG9uc2UuZGF0YVtlbXBdLlBob3RvUGF0aAogICAgICB9OwogICAgICBlbXBsb3llZXMucHVzaChlbXBsb3llZSk7CiAgICB9CgogICAgY29udGV4dC5jb21taXQoJ3NldEVtcGxveWVlcycsIGVtcGxveWVlcyk7IC8vIGNvbnRleHQuY29tbWl0KCdzZXRGZXRjaFRpbWVzdGFtcCcpOwogIH0sCgogIGFzeW5jIHJlZ2lzdGVyRW1wbG95ZWUoY29udGV4dCwgZW1wbG95ZWUpIHsKICAgIGNvbnN0IHVybCA9IGNvbnRleHQucm9vdEdldHRlcnMudXJsOwogICAgY29uc3QgZW1wbG95ZWVEYXRhID0gewogICAgICBGaXJzdE5hbWU6IGVtcGxveWVlLmZpcnN0TmFtZSwKICAgICAgTGFzdE5hbWU6IGVtcGxveWVlLmxhc3ROYW1lLAogICAgICBEZXNjcmlwdGlvbjogZW1wbG95ZWUuZGVzY3JpcHRpb24sCiAgICAgIFJhdGU6IGVtcGxveWVlLmhvdXJseVJhdGUsCiAgICAgIEFyZWFzOiBlbXBsb3llZS5hcmVhcy50b1N0cmluZygpLAogICAgICBCaXJ0aERhdGU6IGVtcGxveWVlLmJpcnRoRGF0ZSwKICAgICAgSGlyZURhdGU6IGVtcGxveWVlLmhpcmVEYXRlLAogICAgICBIb21lUGhvbmU6IGVtcGxveWVlLnBob25lTnVtYmVyLAogICAgICBQaG90b1BhdGg6IGVtcGxveWVlLnBob3RvUGF0aCwKICAgICAgQWRkcmVzczogbnVsbCwKICAgICAgQ2l0eTogbnVsbCwKICAgICAgUmVnaW9uOiBudWxsLAogICAgICBQb3N0YWxDb2RlOiBudWxsLAogICAgICBDb3VudHJ5OiBudWxsLAogICAgICBFeHRlbnNpb246IG51bGwsCiAgICAgIFBob3RvOiBudWxsLAogICAgICBOb3RlczogbnVsbCwKICAgICAgUmVwb3J0c1RvOiBudWxsLAogICAgICBXb3JrVGltZXM6IG51bGwsCiAgICAgIFByb2plY3RzRW1wbG95ZWVzOiBudWxsCiAgICB9OwogICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KHVybCArICcvZW1wbG95ZWUvJywgZW1wbG95ZWVEYXRhKTsKCiAgICBpZiAoIXJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKHJlc3BvbnNlLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBmZXRjaCEnKTsKICAgICAgdGhyb3cgZXJyb3I7CiAgICB9IC8vIGNvbnRleHQuY29tbWl0KCdyZWdpc3RlckVtcGxveWVlJywgZW1wbG95ZWUpOwoKICB9LAoKICBhc3luYyB1cGRhdGVFbXBsb3llZShjb250ZXh0LCBlbXBsb3llZSkgewogICAgY29uc3QgdXJsID0gY29udGV4dC5yb290R2V0dGVycy51cmw7CiAgICBjb25zdCBlbXBsb3llZURhdGEgPSB7CiAgICAgIEVtcGxveWVlSWQ6IGVtcGxveWVlLkVtcGxveWVlSWQsCiAgICAgIEZpcnN0TmFtZTogZW1wbG95ZWUuZmlyc3ROYW1lLAogICAgICBMYXN0TmFtZTogZW1wbG95ZWUubGFzdE5hbWUsCiAgICAgIERlc2NyaXB0aW9uOiBlbXBsb3llZS5kZXNjcmlwdGlvbiwKICAgICAgUmF0ZTogZW1wbG95ZWUuaG91cmx5UmF0ZSwKICAgICAgQXJlYXM6IGVtcGxveWVlLmFyZWFzLnRvU3RyaW5nKCksCiAgICAgIEJpcnRoRGF0ZTogZW1wbG95ZWUuYmlydGhEYXRlLAogICAgICBIaXJlRGF0ZTogZW1wbG95ZWUuaGlyZURhdGUsCiAgICAgIEhvbWVQaG9uZTogZW1wbG95ZWUucGhvbmVOdW1iZXIsCiAgICAgIFBob3RvUGF0aDogZW1wbG95ZWUucGhvdG9QYXRoLAogICAgICBBZGRyZXNzOiBudWxsLAogICAgICBDaXR5OiBudWxsLAogICAgICBSZWdpb246IG51bGwsCiAgICAgIFBvc3RhbENvZGU6IG51bGwsCiAgICAgIENvdW50cnk6IG51bGwsCiAgICAgIEV4dGVuc2lvbjogbnVsbCwKICAgICAgUGhvdG86IG51bGwsCiAgICAgIE5vdGVzOiBudWxsLAogICAgICBSZXBvcnRzVG86IG51bGwsCiAgICAgIFdvcmtUaW1lczogbnVsbCwKICAgICAgUHJvamVjdHNFbXBsb3llZXM6IG51bGwKICAgIH07CiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnB1dCh1cmwgKyAnL2VtcGxveWVlLycsIGVtcGxveWVlRGF0YSk7CgogICAgaWYgKCFyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgewogICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihyZXNwb25zZS5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZmV0Y2ghJyk7CiAgICAgIHRocm93IGVycm9yOwogICAgfQogIH0sCgogIGFzeW5jIGRlbGV0ZUVtcGxveWVlKGNvbnRleHQsIGlkKSB7CiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmRlbGV0ZSgnaHR0cHM6Ly9sb2NhbGhvc3Q6NzA3NS9hcGkvZW1wbG95ZWUvJyArIGlkKTsKCiAgICBpZiAoIXJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKHJlc3BvbnNlLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBmZXRjaCEnKTsKICAgICAgdGhyb3cgZXJyb3I7CiAgICB9CgogICAgY29udGV4dC5jb21taXQoJ2RlbGV0ZUVtcGxveWVlJywgaWQpOwogIH0KCn07"},{"version":3,"names":["axios","loadEmployees","context","url","rootGetters","response","get","status","error","Error","message","employees","emp","data","employee","EmployeeId","firstName","FirstName","lastName","LastName","description","Description","rate","Rate","areas","Areas","birthDate","BirthDate","hireDate","HireDate","phoneNumber","HomePhone","photoPath","PhotoPath","push","commit","registerEmployee","employeeData","hourlyRate","toString","Address","City","Region","PostalCode","Country","Extension","Photo","Notes","ReportsTo","WorkTimes","ProjectsEmployees","post","updateEmployee","put","deleteEmployee","id","delete"],"sources":["C:/git/projects/PetProject/studies/EmployeeAPI/UI/EmployeeUI/src/store/modules/employee/actions.js"],"sourcesContent":["import axios from 'axios';\r\nexport default {\r\n    async loadEmployees(context) {\r\n        const url = context.rootGetters.url;\r\n        // if(!payload.forceRefresh && !context.getters.shouldUpdate){\r\n        //     return;\r\n        // }\r\n        \r\n        const response = await axios.get(\r\n            url+'/employee/'\r\n        );            \r\n\r\n        if(!response.status===200){\r\n            const error = new Error(response.message || 'Failed to fetch!');\r\n            throw error;\r\n        }\r\n\r\n        const employees = [];       \r\n\r\n        for (const emp in response.data){\r\n            const employee={\r\n                EmployeeId: response.data[emp].EmployeeId,\r\n                firstName: response.data[emp].FirstName,\r\n                lastName: response.data[emp].LastName,\r\n                description: response.data[emp].Description,\r\n                rate: response.data[emp].Rate,\r\n                areas: response.data[emp].Areas,\r\n                birthDate: response.data[emp].BirthDate,\r\n                hireDate: response.data[emp].HireDate,\r\n                phoneNumber: response.data[emp].HomePhone,\r\n                photoPath: response.data[emp].PhotoPath,\r\n            };\r\n            employees.push(employee);\r\n        }        \r\n        context.commit('setEmployees', employees);\r\n\r\n        // context.commit('setFetchTimestamp');\r\n    },\r\n    async registerEmployee(context, employee){\r\n        const url = context.rootGetters.url;\r\n        const employeeData={\r\n            FirstName: employee.firstName,\r\n            LastName: employee.lastName,\r\n            Description: employee.description,\r\n            Rate: employee.hourlyRate,\r\n            Areas: employee.areas.toString(),            \r\n            BirthDate: employee.birthDate,\r\n            HireDate: employee.hireDate,\r\n            HomePhone: employee.phoneNumber,\r\n            PhotoPath: employee.photoPath,\r\n            Address: null,\r\n            City: null,\r\n            Region: null,\r\n            PostalCode: null,\r\n            Country: null,\r\n            Extension: null,\r\n            Photo: null,\r\n            Notes: null,\r\n            ReportsTo: null,\r\n            WorkTimes: null,\r\n            ProjectsEmployees: null\r\n        }        \r\n        const response = await axios.post(url+'/employee/', \r\n           employeeData\r\n        );\r\n       \r\n        if(!response.status=== 200){\r\n            const error = new Error(response.message || 'Failed to fetch!');\r\n            throw error;\r\n        }\r\n        // context.commit('registerEmployee', employee);\r\n    },\r\n    async updateEmployee(context, employee){\r\n        const url = context.rootGetters.url;\r\n        const employeeData={\r\n            EmployeeId: employee.EmployeeId,\r\n            FirstName: employee.firstName,\r\n            LastName: employee.lastName,\r\n            Description: employee.description,\r\n            Rate: employee.hourlyRate,\r\n            Areas: employee.areas.toString(),            \r\n            BirthDate: employee.birthDate,\r\n            HireDate: employee.hireDate,\r\n            HomePhone: employee.phoneNumber,\r\n            PhotoPath: employee.photoPath,\r\n            Address: null,\r\n            City: null,\r\n            Region: null,\r\n            PostalCode: null,\r\n            Country: null,\r\n            Extension: null,\r\n            Photo: null,\r\n            Notes: null,\r\n            ReportsTo: null,\r\n            WorkTimes: null,\r\n            ProjectsEmployees: null\r\n        }        \r\n        const response = await axios.put(url+'/employee/', \r\n           employeeData\r\n        );\r\n       \r\n        if(!response.status=== 200){\r\n            const error = new Error(response.message || 'Failed to fetch!');\r\n            throw error;\r\n        }\r\n    },\r\n    async deleteEmployee(context,id){\r\n        const response = await axios.delete('https://localhost:7075/api/employee/'+id);\r\n        if(!response.status === 200){\r\n            const error = new Error(response.message || 'Failed to fetch!');\r\n            throw error;\r\n        }\r\n        context.commit('deleteEmployee',id);\r\n    }\r\n\r\n    \r\n}"],"mappings":"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"}]}