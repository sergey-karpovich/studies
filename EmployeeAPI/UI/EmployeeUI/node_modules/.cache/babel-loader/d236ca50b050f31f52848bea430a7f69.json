{"remainingRequest":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\babel-loader\\lib\\index.js!C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\src\\store\\modules\\employee\\mutations.js","dependencies":[{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\src\\store\\modules\\employee\\mutations.js","mtime":1665752668128},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\babel.config.js","mtime":1665752668081},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665846217214},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\babel-loader\\lib\\index.js","mtime":1665846227068},{"path":"C:\\git\\projects\\PetProject\\studies\\EmployeeAPI\\UI\\EmployeeUI\\node_modules\\eslint-loader\\index.js","mtime":1665846219959}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zaGlmdC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICByZWdpc3RlckVtcGxveWVlKHN0YXRlLCBlbXBsb3llZSkgewogICAgc3RhdGUuRW1wbG95ZWVzLnVuc2hpZnQoZW1wbG95ZWUpOwogIH0sCgogIHNldEVtcGxveWVlcyhzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUuZW1wbG95ZWVzID0gcGF5bG9hZDsKICB9LAoKICBzZXRGZXRjaFRpbWVzdGFtcChzdGF0ZSkgewogICAgc3RhdGUubGFzdEZldGNoID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgfSwKCiAgZGVsZXRlRW1wbG95ZWUoc3RhdGUsIGlkKSB7CiAgICBzdGF0ZS5lbXBsb3llZXMgPSBzdGF0ZS5lbXBsb3llZXMuZmlsdGVyKGVtcCA9PiBlbXAuRW1wbG95ZWVJZCAhPSBpZCk7CiAgfQoKfTs="},{"version":3,"names":["registerEmployee","state","employee","Employees","unshift","setEmployees","payload","employees","setFetchTimestamp","lastFetch","Date","getTime","deleteEmployee","id","filter","emp","EmployeeId"],"sources":["C:/git/projects/PetProject/studies/EmployeeAPI/UI/EmployeeUI/src/store/modules/employee/mutations.js"],"sourcesContent":["export default {\r\n    registerEmployee(state, employee){    \r\n        state.Employees.unshift(employee);\r\n    },\r\n    setEmployees(state, payload){\r\n        state.employees = payload;\r\n    },\r\n    setFetchTimestamp(state){\r\n        state.lastFetch = new Date().getTime();\r\n    },\r\n    deleteEmployee(state,id){\r\n        state.employees = state.employees.filter(emp=>emp.EmployeeId!=id);\r\n    }\r\n};"],"mappings":";AAAA,eAAe;EACXA,gBAAgB,CAACC,KAAD,EAAQC,QAAR,EAAiB;IAC7BD,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwBF,QAAxB;EACH,CAHU;;EAIXG,YAAY,CAACJ,KAAD,EAAQK,OAAR,EAAgB;IACxBL,KAAK,CAACM,SAAN,GAAkBD,OAAlB;EACH,CANU;;EAOXE,iBAAiB,CAACP,KAAD,EAAO;IACpBA,KAAK,CAACQ,SAAN,GAAkB,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;EACH,CATU;;EAUXC,cAAc,CAACX,KAAD,EAAOY,EAAP,EAAU;IACpBZ,KAAK,CAACM,SAAN,GAAkBN,KAAK,CAACM,SAAN,CAAgBO,MAAhB,CAAuBC,GAAG,IAAEA,GAAG,CAACC,UAAJ,IAAgBH,EAA5C,CAAlB;EACH;;AAZU,CAAf"}]}